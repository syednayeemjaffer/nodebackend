{
    "swagger": "2.0",
    "info": {
      "title": "User Management API",
      "version": "1.0.0",
      "description": "API documentation for Express User CRUD with JWT & Multer"
    },
    "host": "localhost:3030",
    "basePath": "/api",
    "schemes": ["http"],
    "securityDefinitions": {
      "bearerAuth": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "description": "Enter JWT token in the format: Bearer <token>"
      }
    },
    
    "tags": [
      {
        "name": "Users",
        "description": "User management APIs"
      }
    ],
    "paths": {
      "/users/add-user": {
        "post": {
          "summary": "Register a new user",
          "tags": ["Users"],
          "x-originalPath": "/register",
          "consumes": ["application/json"],
          "parameters": [
            {
              "in": "body",
              "name": "user",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "username": { "type": "string" },
                  "email": { "type": "string" },
                  "phoneNumber": { "type": "string" },
                  "password": { "type": "string" },
                  "role": {
                    "type": "string",
                    "enum": ["USER", "ADMIN"]
                  },
                  "img": { "type": "string" }
                }
              }
            }
          ],
          "responses": {
            "201": { "description": "User registered successfully" },
            "400": { "description": "Validation error" }
          }
        }
      },
      "/users/login-user": {
        "post": {
          "summary": "Login user and get JWT token",
          "tags": ["Users"],
          "consumes": ["application/json"],
          "parameters": [
            {
              "in": "body",
              "name": "credentials",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string" },
                  "password": { "type": "string" }
                }
              }
            }
          ],
          "responses": {
            "200": { "description": "Login successful" },
            "401": { "description": "Invalid credentials" }
          }
        }
      },
      "/users/upload-image": {
        "post": {
          "summary": "Upload profile image",
          "tags": ["Users"],
          "consumes": ["multipart/form-data"],
          "parameters": [
            {
              "in": "formData",
              "name": "role",
              "type": "string",
              "enum": ["USER", "ADMIN"],
              "description": "Role of the user"
            },
            {
              "in": "formData",
              "name": "img",
              "type": "file",
              "required": true,
              "description": "Profile image file"
            }
          ],
          "responses": {
            "200": { "description": "Image uploaded successfully" },
            "400": { "description": "Invalid file type or size" }
          }
        }
      },
      "/users/getAll-users": {
        "get": {
          "summary": "Get all users (Admin only)",
          "tags": ["Users"],
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "header",
              "name": "Authorization",
              "type": "string",
              "required": true,
              "description": "Bearer token for authentication (Format: Bearer <token>)"
            }
          ],
          "responses": {
            "200": { "description": "List of users" },
            "403": { "description": "Forbidden" }
          }
        }
      },
      "/users/get-userById/{id}": {
        "get": {
          "summary": "Get a user by ID (Admin only)",
          "tags": ["Users"],
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "header",
              "name": "Authorization",
              "type": "string",
              "required": true,
              "description": "Bearer token for authentication (Format: Bearer <token>)"
            },
            {
              "in": "path",
              "name": "id",
              "type": "string",
              "required": true,
              "description": "MongoDB user ID"
            }
          ],
          "responses": {
            "200": { "description": "User found" },
            "404": { "description": "User not found" }
          }
        }
      },
      "/users/update-user": {
        "put": {
          "summary": "Update logged-in user (Admin only)",
          "tags": ["Users"],
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "consumes": ["application/json"],
          "parameters": [
            {
              "in": "header",
              "name": "Authorization",
              "type": "string",
              "description": "Bearer token for authentication (Format: Bearer <token>)"
            },
            {
              "in": "body",
              "name": "user",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "username": { "type": "string" },
                  "email": { "type": "string" },
                  "phoneNumber": { "type": "string" },
                  "password": { "type": "string" },
                  "role": { "type": "string" }
                }
              }
            }
          ],
          "responses": {
            "200": { "description": "User updated successfully" },
            "404": { "description": "User not found" }
          }
        }
      },
      "/users/delete-userById/{id}": {
        "delete": {
          "summary": "Delete logged-in user (Admin only)",
          "tags": ["Users"],
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "header",
              "name": "Authorization",
              "type": "string",
              "required": true,
              "description": "Bearer token for authentication (Format: Bearer <token>)"
            },
            {
              "in": "path",
              "name": "id",
              "type": "string",
              "required": true,
              "description": "User ID"
            }
          ],
          "responses": {
            "200": { "description": "User deleted successfully" },
            "403": { "description": "Forbidden" },
            "404": { "description": "User not found" }
          }
        }
      },
      "/users/login-userDetails": {
        "get": {
          "summary": "Get profile of logged-in user",
          "tags": ["Users"],
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "header",
              "name": "Authorization",
              "type": "string",
              "required": true,
              "description": "Bearer token for authentication (Format: Bearer <token>)"
            }
          ],
          "responses": {
            "200": { "description": "User profile retrieved" },
            "404": { "description": "User not found" }
          }
        }
      }
    }
  }
  



